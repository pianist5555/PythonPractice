# 'Don't reinvent the wheel.

abs(-3) # 절대값
all([1,2,3,0]) # 반복 가능한 자료형에서 모두 참이면 True
any([1,2,3,0]) # 반복 가능한 자료형에서 한개라도 참이면 True
chr(97) # 아스키코드 값을 입력받아 문자 출력 97 = 'a'를 출력
ord('a') # 문자 값을 입력받아 아스키코드를 출력 'a' = 97을 출력
dir({'1':1}) # 객체가 자체적으로 가지고 있는 변수 or 함수를 보여준다. list 타입 등도 가능
divmod(7,3) # 7을 3으로 나누어서 (몫, 나머지) 튜플 형식으로 반환

for i, name in enumerate(['body', 'foo', 'bar']): # enumerate : index 값을 반환해준다.
    print(i, name)

print(list( filter(lambda x: x > 0, [1, -3, 2, 0, -5, 6]) )) # 조건에 맞는 요소들을 반환해준다.
id(3) # 객체 주소를 반환해준다.
hex(2) # 16진수를 반환해준다.
oct(3) # 8진수로 반환
#input("Enter: ") # 사용자 입력정보를 받는다.
int('3'), int(3.4) # 정수로 캐스팅
list([1,2,3]) # List로 캐스팅
str(3) # 문자열로 캐스팅
tuple([4,2,3]) # 튜플로 캐스팅
type("abc") # 타입을 반환

class Person: pass 
a = Person
isinstance(a, Person) # 해당 객체가 해당 클래스의 인스턴스가 맞는지 판별

len("python") # 입력값의 길이를 반환해 준다.
print(list(map(lambda x: x*2, [1,2,3,4]))) # 반복 가능한 객체를 받아 하나씩 꺼내어 함수결과 값으로 반환 map(함수 , 반복객체)
max([1,2,3]) # 최대 인수를 반환
min('python') # 최소 인수를 반환
sum([1,2,3]) # 인수들의 합을 반환
pow(2,4) # x의 y제곱 값을 반환 2의 4승
range(1,10,2) # 입력 받은 숫자 범위내로 반복 가능한 객체를 생성하여 준다. / 인수가 3개일 경우: 숫자들간의 거리를 결정해준다.(점프)
round(4.4) # 숫자를 반올림 해준다.
sorted([3,2,1]) # 정렬한 뒤 리스트로 반환 / sort()와 차이는 리스트 객체 그 자체를 정렬만 하고 결과값을 반환하진 않는다.
print(list(zip(['a','b',1], ['c','d',2]))) # 동일한 개수로 묶어진 자료형을 묶어준다. [('a', 'c'), ('b', 'd'), (1, 2)]